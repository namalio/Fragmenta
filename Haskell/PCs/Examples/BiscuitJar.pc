PC PC_BiscuitJar@BiscuitJar
atom openJar
compound BiscuitJar.n,m@openJar
compound JarOpened.n,m@OpJarOpenedIf
stop STOP
operator OpJarOpenedIf.If
op_connector_g OpJarOpenedIf->OpJarOpened{(n≥0) ⋀ (n≤m)}
op_else_connector OpJarOpenedIf->STOP
operator OpJarOpened.Choice
atom takeBiscuit{n>0}
atom dropBiscuit{n<m}
atom closeJar
op_connector OpJarOpened->takeBiscuit
op_connector OpJarOpened->dropBiscuit
op_connector OpJarOpened->closeJar
reference RefJarOpened
atom openJar
ref_connector RefJarOpened->JarOpened.'n','m'
after openJar->RefJarOpened
reference RefJarOpenedTake
ref_connector RefJarOpenedTake->JarOpened.'n-1','m'
reference RefJarOpenedDrop
ref_connector RefJarOpenedDrop->JarOpened.'n+1','m'
after takeBiscuit->RefJarOpenedTake
after dropBiscuit->RefJarOpenedDrop
reference RefBiscuitJar
ref_connector RefBiscuitJar->BiscuitJar.'n','m'
after closeJar->RefBiscuitJar
