
channel e1, e2, e3, e4, e5

edges = {e1, e2, e3, e4, e5}

Limited = 
   let
      Limited0(E, n) = 
         if n > 0
            then [] e : E @ e -> (Limited0(E, n-1) |~| SKIP)
            else STOP
   within
      Limited0(edges, 5)

PortDependancyGraph = 
   let
      P(1) = e3 -> P(3)
      P(2) = e5 -> SKIP
      P(3) = e4 -> P(4)
      P(4) = e1 -> P(5)
      P(5) = e2 -> P(1)
   within
      [] i : {1..5} @ P(i)

assert Limited [T= PortDependancyGraph