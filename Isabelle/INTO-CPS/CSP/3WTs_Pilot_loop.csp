
channel E_win1_t1in, E_iout_t1in, E_t1out_pin, E_pout_t2in, E_t2out_wout, E_wout_win, E_win_t3in, E_t3wlout_wlout, E_t3out_din, E_wlout_wlin, E_vo_vi1, E_vi1_vi2, E_dout_win1, E_t1in_t1out, E_pin_pout, E_t2in_t2out, E_win_wlout, E_t3in_t3wlout, E_t3in_t3out, E_vi2_t3out, E_din_dout, E_wlin_vo

edges = {E_win1_t1in, E_iout_t1in, E_t1out_pin, E_pout_t2in, E_t2out_wout, E_wout_win, E_win_t3in, E_t3wlout_wlout, E_t3out_din, E_wlout_wlin, E_vo_vi1, E_vi1_vi2, E_dout_win1, E_t1in_t1out, E_pin_pout, E_t2in_t2out, E_win_wlout, E_t3in_t3wlout, E_t3in_t3out, E_vi2_t3out, E_din_dout, E_wlin_vo}

Limited = 
   let
      Limited0(E, n) = 
         if n > 0
            then [] e : E @ e -> (Limited0(E, n-1) |~| SKIP)
            else STOP
   within
      Limited0(edges, 22)

PortDependancyGraph = 
   let
      P(1) = E_win1_t1in -> P(2)
      P(2) = E_t1in_t1out -> P(5)
      P(3) = E_iout_t1in -> P(2)
      P(4) = E_t1in_t1out -> P(5)
      P(5) = E_t1out_pin -> P(6)
      P(6) = E_pin_pout -> P(7)
      P(7) = E_pout_t2in -> P(8)
      P(8) = E_t2in_t2out -> P(9)
      P(9) = E_t2out_wout -> P(10)
      P(10) = E_wout_win -> P(12)
      P(11) = E_wout_win -> P(12)
      P(12) = E_win_t3in -> P(14) [] E_win_wlout -> P(16)
      P(13) = E_win_t3in -> P(14) [] E_win_wlout -> P(16)
      P(14) = E_t3in_t3wlout -> P(15) [] E_t3in_t3out -> P(17)
      P(15) = E_t3wlout_wlout -> P(16)
      P(16) = E_wlout_wlin -> P(20)
      P(17) = E_t3out_din -> P(18)
      P(18) = E_din_dout -> P(25)
      P(19) = E_wlout_wlin -> P(20)
      P(20) = E_wlin_vo -> P(21)
      P(21) = E_vo_vi1 -> P(22)
      P(22) = E_vi1_vi2 -> P(24)
      P(23) = E_vi1_vi2 -> P(24)
      P(24) = E_vi2_t3out -> P(17)
      P(25) = E_dout_win1 -> P(1)
      P(26) = E_win1_t1in -> P(2)
      P(27) = E_t1in_t1out -> P(5)
      P(28) = E_t1out_pin -> P(6)
      P(29) = E_pin_pout -> P(7)
      P(30) = E_pout_t2in -> P(8)
      P(31) = E_t2in_t2out -> P(9)
      P(32) = E_t2out_wout -> P(10)
      P(33) = E_win_t3in -> P(14) [] E_win_wlout -> P(16)
      P(34) = E_wlout_wlin -> P(20)
      P(35) = E_t3in_t3wlout -> P(15) [] E_t3in_t3out -> P(17)
      P(36) = E_t3wlout_wlout -> P(16)
      P(37) = E_t3in_t3wlout -> P(15) [] E_t3in_t3out -> P(17)
      P(38) = E_t3out_din -> P(18)
      P(39) = E_vi2_t3out -> P(17)
      P(40) = E_t3out_din -> P(18)
      P(41) = E_din_dout -> P(25)
      P(42) = E_dout_win1 -> P(1)
      P(43) = E_wlin_vo -> P(21)
      P(44) = E_vo_vi1 -> P(22)
   within
      [] i : {1..44} @ P(i)

assert Limited [T= PortDependancyGraph